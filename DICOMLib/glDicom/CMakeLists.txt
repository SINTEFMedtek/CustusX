FIND_PACKAGE( Qt4 REQUIRED )
SET(QT_USE_QTOPENGL 1)
INCLUDE( ${QT_USE_FILE} )

find_package(SSC REQUIRED)
include (${SSC_USE_FILE} )

SET( HEADER_FILES glDicom.h glDicomView.h )
SET( SOURCE_FILES glDicom.cpp gldicomfrag.c )
SET( LIBRARIES DICOMLib ${QT_LIBRARIES} )
QT4_WRAP_UI( UI_HEADER_FILES gldicom.ui )
QT4_WRAP_CPP( MOC_HEADER_FILES glDicom.h glDicomView.h )

INCLUDE_DIRECTORIES( 
#    .
#    ../../DataBus 
#    /usr/lib64/dbus-1.0/include/ 
#    /usr/include/dbus-1.0 
    ${CMAKE_CURRENT_SOURCE_DIR}/../../DICOMLib 
    ${QT_INCLUDES}
    ${CMAKE_CURRENT_BINARY_DIR}
    ${CMAKE_CURRENT_SOURCE_DIR}
    )

link_directories( 
#    . 
    ${CMAKE_CURRENT_SOURCE_DIR}/../../DICOMLib 
#    ../DataBus 
    )

ADD_CUSTOM_COMMAND( OUTPUT gldicomfrag.c COMMAND ./convfrag.sh ${CMAKE_CURRENT_BINARY_DIR}/gldicomfrag.c WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR} )

ADD_EXECUTABLE( gldicom ${SOURCE_FILES} ${HEADER_FILES} ${MOC_HEADER_FILES} ${UI_HEADER_FILES} )
SET_TARGET_PROPERTIES( gldicom PROPERTIES LINK_FLAGS "${SNW_LINK_CFLAGS}" COMPILE_FLAGS "${SNW_COMPILE_FLAGS}" )
TARGET_LINK_LIBRARIES( gldicom ${LIBRARIES} ${SNW_LINK_LIBS} GL GLU DICOMLib m GLEW tiff )

configure_file("${CMAKE_CURRENT_SOURCE_DIR}/gldicom.frag" "${CMAKE_CURRENT_SOURCE_DIR}/gldicom.frag")

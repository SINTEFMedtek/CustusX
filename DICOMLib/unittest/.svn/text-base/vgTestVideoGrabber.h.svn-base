#ifndef VGTESTVIDEOGRABBER_H_
#define VGTESTVIDEOGRABBER_H_
#include <cppunit/extensions/TestFactoryRegistry.h>
#include <cppunit/ui/text/TestRunner.h>
#include <cppunit/extensions/HelperMacros.h>
#include "VideoGrabber.h"
class TestVideoGrabber : public QObject, public CppUnit::TestFixture
{
	Q_OBJECT;
public:
	void setUp();
	void tearDown();
	void testDummy();
	void testConstructor();
	void testProcessBuffer();
	void testGlobalPing();
	void testInfo();
	void testSnapshot();
	void testRequestStreaming();
	void testStopStreaming();
	void testShutdown();

public:
	CPPUNIT_TEST_SUITE( TestVideoGrabber );
		CPPUNIT_TEST(testDummy);
		CPPUNIT_TEST(testConstructor);
		CPPUNIT_TEST(testProcessBuffer);
		CPPUNIT_TEST(testGlobalPing);
		CPPUNIT_TEST(testInfo);
		CPPUNIT_TEST(testSnapshot);
		CPPUNIT_TEST(testRequestStreaming);
		CPPUNIT_TEST(testStopStreaming);
		CPPUNIT_TEST(testShutdown);
	CPPUNIT_TEST_SUITE_END();
private:
	VideoGrabber *videograbber;
	bool vgPongReceived;
	QString snapshotFilename;
	quint32 snapshotTimestamp;
	QString streamShmkey;
	int streamWidth;
	int streamHeight;
	int streamDepth;
	bool mInfoReceived;
	QStringList infoKeys;
	QStringList infoValues;
private slots:
	void snapshotDone(QString filename, quint32 timestamp);
	void streamingParameters(QString shmkey, int width, int height, int depth);
	void vgPong();
	void infoReceived(QStringList, QStringList);
};

#endif
